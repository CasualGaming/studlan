# Example Docker Compose config for site deployment

version: '2.4'
services:
  app-bleeding:
    container_name: studlan-app-bleeding
    # TODO use correct image
    image: studlan:bleeding
    environment:
      # TODO add UID+GID
      - STUDLAN_UID=
      - STUDLAN_GID=
      # TODO add superuser info on first run
      - SUPERUSER_USERNAME=
      - SUPERUSER_EMAIL=
      - SUPERUSER_PASSWORD=
      # true or false
      - SUPERUSER_INACTIVE=true
    volumes:
      - /srv/studlan/app-bleeding/settings.py:/srv/studlan/studlan/settings/local.py:ro
      - /srv/studlan/app-bleeding/log:/srv/studlan/log:rw
      # Where to put extracted static files so Nginx can serve them instead
      - /srv/studlan/proxy/docs/static:/srv/studlan/static:rw
    networks:
      - studlan
    restart: "always"
  db:
    container_name: studlan-db
    image: postgres
    # postgres doesn't like being run as a specified user, so databse files have a weird owner
    # postgres doesn't write log files by default, so no log dir is bound
    environment:
      - POSTGRES_USER=postgres
      # TODO add superuser password
      - POSTGRES_PASSWORD=
    volumes:
      - /srv/studlan/db/data:/var/lib/postgresql/data:rw
    networks:
      - studlan
    restart: "always"
  proxy:
    container_name: studlan-proxy
    image: linuxserver/nginx
    environment:
      # TODO add UID+GID
      - PUID=
      - PGID=
      - TZ=Europe/Oslo
    volumes:
      - /srv/studlan/proxy/config:/config/nginx:ro
      - /srv/studlan/proxy/log:/config/log:rw
      - /srv/studlan/proxy/docs:/config/www:ro
      # TODO replace with proper certificates once aquired
      - /etc/ssl/certs/ssl-cert-snakeoil.pem:/config/keys/cert.crt:ro
      - /etc/ssl/private/ssl-cert-snakeoil.key:/config/keys/cert.key:ro
    networks:
      - studlan
    ports:
      - "80:80"
      - "443:443"
    restart: always
networks:
  studlan:
    # Create: docker network create --driver=bridge studlan
    external: true
