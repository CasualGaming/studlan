# Example Docker Compose config for studlan deployment

# This example uses extarnal networks and static IPs, to make firewall and external Nginx config easier.

version: '2.4'
services:
  app:
    container_name: studlan-EXAMPLE-app
    # TODO set image (and tag) (e.g. casualgaming/studlan:bleeding)
    image: EXAMPLE_IMAGE
    environment:
      # TODO add UID+GID for studlan user on host
      - STUDLAN_UID=
      - STUDLAN_GID=
      # TODO add superuser info in order to automatically add superadmin, then comment afterwards
      #- SUPERUSER_USERNAME=
      #- SUPERUSER_EMAIL=
      #- SUPERUSER_PASSWORD=
      #- SUPERUSER_INACTIVE=true
      - FLUSH_DATABASE=false
      - IMPORT_DATABASE=false
      - EXPORT_DATABASE=false
      - NO_START=false
    volumes:
      - /srv/studlan-EXAMPLE/settings.py:/srv/studlan/studlan/settings/local.py:ro
      - /srv/studlan-EXAMPLE/log:/srv/studlan/log:rw
      # Where to put extracted static files so Nginx can serve them instead
      - /srv/studlan-EXAMPLE/doc/static:/srv/studlan/static:rw
      - /srv/studlan-EXAMPLE/import_export:/srv/studlan/import_export:rw
    networks:
      studlan-dev:
        # TODO add static IP address
        ipv4_address: X.Y.Z.W
    restart: "always"
    depends_on:
      - db
  db:
    container_name: studlan-EXAMPLE-db
    image: postgres
    # postgres doesn't like being run as a specified user, so databse files have a weird owner
    # postgres doesn't write log files by default, so no log dir is bound
    environment:
      - POSTGRES_USER=postgres
      # TODO add random root-ish password
      - POSTGRES_PASSWORD=AnJaxbuiD5ty5tr9
    volumes:
      - /srv/studlan-EXAMPLE/db:/var/lib/postgresql/data:rw
    networks:
      studlan-EXAMPLE:
        # TODO add static IP address
        ipv4_address: X.Y.Z.W
    restart: "always"
networks:
  # Create this externally as a bridge network with a chosen subnet
  studlan-EXAMPLE:
    external: true
