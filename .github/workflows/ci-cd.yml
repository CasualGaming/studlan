# Required secrets:
# - DOCKER_USERNAME (for publish)
# - DOCKER_PASSWORD (for publish)

name: CI/CD (validate)

env:
  DOCKER_REPO: casualgaming/studlan
  PYTHON_VERSION: "2.7"

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # - name: Cache dependencies
      #   TODO
      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: '${{ env.PYTHON_VERSION }}'
      - name: Install requirements
        run: |
          sudo apt-get update
          sudo apt-get install gettext
          python -m pip install --upgrade pip virtualenv setuptools wheel
          python -m pip install -r requirements/test.txt
      - name: Validate Django project
        run: manage/ci/django-validate.sh
      - name: Test
        run: manage/ci/django-test.sh
      - name: Lint
        run: flake8
      - name: Validate Docker image
        run: manage/ci/docker-validate.sh

  publish-bleeding:
    name: Publish (bleeding)
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: validate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get version
        run: echo "version=$(echo 0.0.0-SNAPSHOT+$(TZ=Etc/GMT date "+%Y-%m-%dT%H:%M:%SZ"))" | tee -a $GITHUB_ENV
      - name: Create version file
        run: echo "${{ env.version }}" > VERSION
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_REPO }}:bleeding
          push: true

  publish-stable:
    name: Publish (stable)
    if: github.event_name == 'release' && github.event.action == 'published' && startsWith(github.ref, 'refs/tags/v')
    needs: validate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get version
        run: |
          # Get version from git tag
          VERSION="$(echo ${GITHUB_REF#refs/tags/v})"
          echo "version=$VERSION" | tee -a $GITHUB_ENV
          # Check if semantic version (3 numbers, ignore pre-release and metadata)
          echo $VERSION | grep -Po '^\d+\.\d+\.\d+'
          # Extract other version representations
          echo "version_major=$(echo $VERSION | grep -Po '^\d+')" | tee -a $GITHUB_ENV
          echo "version_minor=$(echo $VERSION | grep -Po '^\d+\.\d+')" | tee -a $GITHUB_ENV
          echo "version_patch=$(echo $VERSION | grep -Po '^\d+\.\d+\.\d+')" | tee -a $GITHUB_ENV
      - name: Create version file
        run: echo "${{ env.version }}" > VERSION
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_REPO }}:${{ env.version_major }}
            ${{ env.DOCKER_REPO }}:${{ env.version_minor }}
            ${{ env.DOCKER_REPO }}:${{ env.version_patch }}
            ${{ env.DOCKER_REPO }}:stable
          push: true
