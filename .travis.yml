# Travis CI config for studlan

# Required env vars:
# - DOCKER_REPO
# - DOCKER_USER (secure)
# - DOCKER_PASSWORD (secure)
# - SSH_HOST_IPv<4|6> (secure)
# - SSH_USER
# - SONARCLOUD_TOKEN (secure)
# - SONARCLOUD_ORG
# - (automatic encryption keys) (secure)

# virtualenv is implicit for python
language: python
python:
  - "2.7"

addons:
  sonarcloud:
    organization: $SONARCLOUD_ORG
    token: $SONARCLOUD_TOKEN

services:
  - docker

cache: pip

stages:
  - test
  - name: deploy-registry
    if: NOT (type = pull_request)
  - name: deploy-site
    if: NOT (type = pull_request)

jobs:
  include:
    # Testing stage
    - stage: test
      name: Validate Django project
      install: pip install --upgrade -r requirements/test.txt
      script: manage/ci-validate-django.sh
    - stage: test
      name: Run tests
      install: pip install --upgrade -r requirements/test.txt
      script: manage/ci-test.sh
    - stage: test
      name: Analyze source code (flake8)
      install: pip install --upgrade -r requirements/test.txt
      script: flake8
    - stage: test
      name: Analyze source code (SonarCloud)
      language: java
      git:
        depth: false
      script: sonar-scanner
    - stage: test
      name: Validate Docker image
      install: true # NOP
      script: manage/ci-validate-docker.sh

    # Deploy to registry stage
    - stage: deploy-registry
      name: Build and deploy stable to registry
      # Requires tag "vX.Y.Z" without suffix
      if: (tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$)
      install: true # NOP
      script: manage/ci-deploy-registry.sh stable $TRAVIS_TAG
    - stage: deploy-registry
      name: Build and deploy bleeding to registry
      if: (branch = master)
      install: true # NOP
      script: manage/ci-deploy-registry.sh bleeding

    # Deploy to site stage
    - stage: deploy-site
      name: Deploy stable to site
      if: (tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$)
      before_install:
      - openssl aes-256-cbc -K $encrypted_974f21a5dc05_key -iv $encrypted_974f21a5dc05_iv -in keys/ssh_deploy.key.enc -out keys/ssh_deploy.key -d
      - chmod 600 keys/ssh_deploy.key
      install: true # NOP
      script: ssh -oStrictHostKeyChecking=no -i keys/ssh_deploy.key ${SSH_USER}@${SSH_HOST} ./deploy-studlan-stable.sh
    - stage: deploy-site
      name: Deploy bleeding to site
      if: (branch = master)
      before_install:
      - openssl aes-256-cbc -K $encrypted_974f21a5dc05_key -iv $encrypted_974f21a5dc05_iv -in keys/ssh_deploy.key.enc -out keys/ssh_deploy.key -d
      - chmod 600 keys/ssh_deploy.key
      install: true # NOP
      script: ssh -oStrictHostKeyChecking=no -i keys/ssh_deploy.key ${SSH_USER}@${SSH_HOST} ./deploy-studlan-bleeding.sh
